<?php
declare( strict_types = 1 );

namespace Pluginkollektiv\AntispamBee\Repository;

use Pluginkollektiv\AntispamBee\Checks\CheckFactory;
use Pluginkollektiv\AntispamBee\Checks\CheckInterface;
use Pluginkollektiv\AntispamBee\Options;

/**
 * Class CheckRepository
 *
 * @package Pluginkollektiv\AntispamBee\Repository
 */
class CheckRepository {


	/**
	 * Stores the options.
	 *
	 * @var Options
	 */
	private $options;

	/**
	 * Stores the CheckFactory.
	 *
	 * @var CheckFactory
	 */
	private $check_factory;

	/**
	 * CheckRepository constructor.
	 *
	 * @param Options      $options Stores the options.
	 * @param CheckFactory $check_factory Constructs the checks.
	 */
	public function __construct( Options $options, CheckFactory $check_factory ) {
		$this->options       = $options;
		$this->check_factory = $check_factory;
	}

	/**
	 * Returns the checks, which are active in the frontend.
	 *
	 * @return CheckInterface[] The list of active checks.
	 */
	public function active_checks() : array {

		$check_factory = $this->check_factory;
		return array_map(
			function ( string $type ) use ( $check_factory ) : CheckInterface {
				return $check_factory->for_type( $type );
			},
			$this->options->active_checks()
		);
	}
}


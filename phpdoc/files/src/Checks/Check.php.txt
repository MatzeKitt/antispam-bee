<?php
declare( strict_types = 1 );

namespace Pluginkollektiv\AntispamBee\Checks;

use Pluginkollektiv\AntispamBee\Filter\FilterCollection;
use Pluginkollektiv\AntispamBee\Preparer\PreparerCollection;

/**
 * Class Check
 *
 * @package Pluginkollektiv\AntispamBee\Checks
 */
class Check implements CheckInterface {


	/**
	 * The type.
	 *
	 * @var string
	 */
	private $type;

	/**
	 * The filter collection.
	 *
	 * @var FilterCollection
	 */
	private $filter;

	/**
	 * The preparer collection.
	 *
	 * @var PreparerCollection
	 */
	private $preparer;

	/**
	 * Check constructor.
	 *
	 * @param string                  $type The type.
	 * @param FilterCollection|null   $filter The filter.
	 * @param PreparerCollection|null $preparer The preparer.
	 */
	public function __construct(
		string $type,
		FilterCollection $filter = null,
		PreparerCollection $preparer = null
	) {
		$this->type     = $type;
		$this->filter   = ( $filter ) ? $filter : FilterCollection::as_null();
		$this->preparer = ( $preparer ) ? $preparer : PreparerCollection::as_null();
	}

	/**
	 * Returns the FilterCollection.
	 *
	 * @return FilterCollection
	 */
	public function filter() : FilterCollection {
		return $this->filter;
	}

	/**
	 * Returns the PreparerCollection.
	 *
	 * @return PreparerCollection
	 */
	public function preparer() : PreparerCollection {
		return $this->preparer;
	}

	/**
	 * Returns the type of the check.
	 *
	 * @return string
	 */
	public function type() : string {
		return $this->type;
	}

	public function register_preparer() {
		$success = true;
		foreach ( $this->preparer()->preparer() as $preparer ) {
			$registered = $preparer->register( $this );
			if ( ! $registered ) {
				$success = false;
			}
		}
		return $success;
	}
}

